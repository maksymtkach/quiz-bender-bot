const { User, Assessment } = require('../utils/associations');
const bot = require('../config/botInstance');
const { chats } = require('../helpers/globalState');

async function showAssessments(chatId) {
    try {
        const user = await User.findOne({ where: { chatId } });
        if (!user) {
            return bot.sendMessage(chatId, '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π.');
        }

        const assessments = await Assessment.findAll({ where: { author_id: user.id } });

        if (!assessments.length) {
            return bot.sendMessage(chatId, '–ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Ç–µ—Å—Ç—ñ–≤.');
        }

        const inlineKeyboard = assessments.map((assessment) => [
            { text: assessment.title, callback_data: `assessment_${assessment.id}` },
        ]);

        await bot.sendMessage(chatId, '–û–±–µ—Ä—ñ—Ç—å —Ç–µ—Å—Ç —ñ–∑ –ø–µ—Ä–µ–ª—ñ–∫—É:', {
            reply_markup: { inline_keyboard: inlineKeyboard },
        });
    } catch (err) {
        console.error(`Error showing assessments for chatId ${chatId}:`, err);
        await bot.sendMessage(chatId, '–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —Ç–µ—Å—Ç—ñ–≤.');
    }
}

async function showAndDeleteAssessments(chatId) {
    try {
        const user = await User.findOne({ where: { chatId } });
        if (!user) {
            return bot.sendMessage(chatId, '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π.');
        }

        // –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ —Ç–µ—Å—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        const assessments = await Assessment.findAll({ where: { author_id: user.id } });

        if (!assessments.length) {
            return bot.sendMessage(chatId, '–ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Ç–µ—Å—Ç—ñ–≤.');
        }

        // –§–æ—Ä–º—É—î–º–æ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ç–µ—Å—Ç—É
        const inlineKeyboard = assessments.map((assessment) => [
            { text: `üóë –í–∏–¥–∞–ª–∏—Ç–∏ ${assessment.title}`, callback_data: `delete_assessment_${assessment.id}` },
        ]);

        const message = await bot.sendMessage(chatId, '–û–±–µ—Ä—ñ—Ç—å —Ç–µ—Å—Ç, —è–∫–∏–π –≤–∏ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏:', {
            reply_markup: { inline_keyboard: inlineKeyboard },
        });

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ message_id –¥–ª—è –ø–æ–¥–∞–ª—å—à–æ–≥–æ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è
        chats[chatId] = { messageId: message.message_id };
    } catch (err) {
        console.error(`Error showing assessments for chatId ${chatId}:`, err);
        await bot.sendMessage(chatId, '–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —Ç–µ—Å—Ç—ñ–≤.');
    }
}

// deleteAssessment
// saveQuestions

module.exports = {
    showAndDeleteAssessments,
    showAssessments
}
